import sqlite3
from aiogram import types, F
from aiogram.enums import ParseMode
from loader import dp

ranks = ["–ù–æ–≤–∏—á–æ–∫", "–û–ø—ã—Ç–Ω—ã–π", "–í–µ—Ç–µ—Ä–∞–Ω", "–ú–∞—Å—Ç–µ—Ä", "–õ–µ–≥–µ–Ω–¥–∞"]


@dp.message(F.text == "–ü—Ä–æ—Ñ–∏–ª—åüë§")
async def education(message: types.Message):
    # con = sqlite3.connect("data/database/information_about_companies.db")
    # # –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
    # cur = con.cursor()
    # current_score = cur.execute("""SELECT score FROM users WHERE id = ?""", (str(message.from_user.id),)).fetchone()[0]
    # con.commit()
    # con.close()

    current_score = 1
    rank = ""

    if 0 <= current_score//100 <= 4:
        rank = ranks[0] + "üë∂"
    elif 5 <= current_score//100 <= 9:
        rank = ranks[1] + "üë¶"
    elif 10 <= current_score//100 <= 14:
        rank = ranks[2] + "üë®"
    elif 15 <= current_score//100 <= 24:
        rank = ranks[3] + "üßî"
    else:
        rank = ranks[4] + "üßì"

    await message.answer("üë§–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
                         "üôÇ–ò–º—è: " + message.from_user.username + "\n"
                         "üëë–í–∞—à–µ –∑–≤–∞–Ω–∏–µ: " + rank + " –≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ –º—É—Å–æ—Ä–∞‚ôªÔ∏è\n"
                         "üåü–í–∞—à —É—Ä–æ–≤–µ–Ω—å: " + str(current_score//100) + "\n"
                         "‚ú®–í–∞—â —Ç–µ–∫—É—â–∏–π –æ–ø—ã—Ç: " + str(current_score%100) + "\\100" + " –æ–ø—ã—Ç\n",
                         parse_mode=ParseMode.HTML)


